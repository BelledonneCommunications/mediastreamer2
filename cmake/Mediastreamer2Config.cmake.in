############################################################################
# Mediastreamer2Config.cmake
# Copyright (C) 2015  Belledonne Communications, Grenoble France
#
############################################################################
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
############################################################################
#
# Config file for the mediastreamer2 package.
# It defines the following variables:
#
#  MEDIASTREAMER2_FOUND - system has mediastreamer2
#  MEDIASTREAMER2_INCLUDE_DIRS - the mediastreamer2 include directory
#  MEDIASTREAMER2_LIBRARIES - The libraries needed to use mediastreamer2
#  MEDIASTREAMER2_CPPFLAGS - The compilation flags needed to use mediastreamer2
#  MEDIASTREAMER2_LDFLAGS - The linking flags needed to use mediastreamer2

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

include("${CMAKE_CURRENT_LIST_DIR}/Mediastreamer2Targets.cmake")

if(@ENABLE_SHARED@)
	set(MEDIASTREAMER2_TARGETNAME mediastreamer)
	set(MEDIASTREAMER2_LIBRARIES ${MEDIASTREAMER2_TARGETNAME})
else()
	set(MEDIASTREAMER2_TARGETNAME mediastreamer-static)
	if(LINPHONE_BUILDER_GROUP_EXTERNAL_SOURCE_PATH_BUILDERS)
		set(MEDIASTREAMER2_LIBRARIES ${MEDIASTREAMER2_TARGETNAME})
	else()
		get_target_property(MEDIASTREAMER2_LIBRARIES ${MEDIASTREAMER2_TARGETNAME} LOCATION)
	endif()
	get_target_property(MEDIASTREAMER2_LIBRARIES ${MEDIASTREAMER2_TARGETNAME} INTERFACE_LINK_LIBRARIES)
endif()

set_target_properties(${MEDIASTREAMER2_TARGETNAME} PROPERTIES INTERFACE_LINK_LIBRARIES "@INTERFACE_LIBS@")

get_target_property(MEDIASTREAMER2_INCLUDE_DIRS ${MEDIASTREAMER2_TARGETNAME} INTERFACE_INCLUDE_DIRECTORIES)

set(MEDIASTREAMER2_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@")

get_target_property(DEPENDENCIES ${MEDIASTREAMER2_TARGETNAME} INTERFACE_LINK_LIBRARIES)

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

set(LIBRARY_SEARCH_PATH "${_IMPORT_PREFIX}")
set(RESOLVED_DEPENDENCIES )

foreach (dependency ${DEPENDENCIES})
	if (NOT IS_ABSOLUTE ${dependency})
		message(STATUS "=> Reloading dependency [${dependency}]")
		string(TOUPPER ${dependency} DEPENDENCY)
		find_package(${dependency} PATHS "${LIBRARY_SEARCH_PATH};@CMAKE_INSTALL_PREFIX@" QUIET)

		if (NOT DEFINED ${DEPENDENCY}_FOUND)
			find_library(${DEPENDENCY}_LIBRARIES ${dependency} PATHS "${LIBRARY_SEARCH_PATH};@CMAKE_INSTALL_PREFIX@" QUIET)
			if (NOT ${DEPENDENCY}-NOTFOUND)
				list(APPEND RESOLVED_DEPENDENCIES ${${DEPENDENCY}_LIBRARIES})
			endif()
                else()
			list(APPEND RESOLVED_DEPENDENCIES ${dependency})
		endif()
	endif()
endforeach()

set_target_properties(${MEDIASTREAMER2_TARGETNAME} PROPERTIES INTERFACE_LINK_LIBRARIES ${RESOLVED_DEPENDENCIES})

set(MEDIASTREAMER2_CPPFLAGS @MEDIASTREAMER2_CPPFLAGS@)
set(MEDIASTREAMER2_LDFLAGS "@LINK_FLAGS_STR@")
set(MEDIASTREAMER2_FOUND 1)
